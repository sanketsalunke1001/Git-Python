
# Q251. Access third element of t = (1, 4, 2, 3).

# t = (1, 4, 2, 3)


# print(t[2])


#                         --------------------------------------------------------------------

# Q252. Slice t = (1, 4, 2, 3) from 1 to 3.

# t = (1, 4, 2, 3)

# slice_tuple = t[1:4]

# print(slice_tuple)


#                         --------------------------------------------------------------------

# Q253. Concatenate tuples t=(1, 4, 2, 3) and u=(2, 5, 4, 6).

# t=(1, 4, 2, 3)

# u=(2, 5, 4, 6)

# merger = t + u

# print(merger)


#                         --------------------------------------------------------------------

# Q254. Unpack t = (1, 4, 2, 3) into a,b,c,d.

# t = (1, 4, 2, 3)

# a,b,c,d = t

# print(a, b, c, d)


#                         --------------------------------------------------------------------

# Q255. Count 1 in t = (1, 4, 2, 3).


# t = (1, 4, 2, 3)

# count_1 = t.count(1)

# print(count_1)

#                         --------------------------------------------------------------------

# Q256. Find index of first 1 in t = (1, 4, 2, 3).


# t = (1, 4, 2, 3)

# print(t.index(1))


#                         --------------------------------------------------------------------

# Q257. Convert list [1,2,3] to tuple.

# a = [1,2,3]

# b = tuple(a)

# print(b)


#                         --------------------------------------------------------------------

# Q258. Check if 3 is in (1,2,3).

# a = (1,2,3)

# print(3 in (1,2,3))

#                         --------------------------------------------------------------------

# Q259. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x, y)

#                         --------------------------------------------------------------------

# Q260. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# print(t[1][1])      # from indexing value 1 tuple, inside index value 1


#                         --------------------------------------------------------------------

# Q261. Access third element of t = (2, 5, 4, 6).

# t = (2, 5, 4, 6)

# third = t[2]

# print(t[2])

#                         --------------------------------------------------------------------

# Q262. Slice t = (2, 5, 4, 6) from 1 to 3.

# t = (2, 5, 4, 6)

# slice_t = t[1: 4]

# print(slice_t)

#                         --------------------------------------------------------------------

# Q263. Concatenate tuples t=(2, 5, 4, 6) and u=(3, 6, 6, 9).

# t=(2, 5, 4, 6) 
# u=(3, 6, 6, 9)

# combined = t + u

# print(combined)



#                         --------------------------------------------------------------------

# Q264. Unpack t = (2, 5, 4, 6) into a,b,c,d.

# t = (2, 5, 4, 6)

# a,b,c,d = t

# print(a, b, c, d)

#                         --------------------------------------------------------------------

# Q265. Count 2 in t = (2, 5, 4, 6).

# t = (2, 5, 4, 6)

# count_2 = t.count(2)

# print(count_2)


#                         --------------------------------------------------------------------

# Q266. Find index of first 2 in t = (2, 5, 4, 6).

# t = (2, 5, 4, 6)

# print(t.index(2))


#                         --------------------------------------------------------------------

# Q267. Convert list [1,2,3] to tuple.

# a = [1,2,3]

# t = tuple(a)

# print(t)


#                         --------------------------------------------------------------------

# Q268. Check if 3 is in (1,2,3).

# t = (1,2,3)

# result = 3 in t

# print(3 in (t))

# print(result)



#                         --------------------------------------------------------------------

# Q269. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x # swaping value

# print(x,y)


#                         --------------------------------------------------------------------

# Q270. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# value = t[1][1]

# print(value)


#                         --------------------------------------------------------------------


# Q271. Access third element of t = (3, 6, 6, 9).

# t = (3, 6, 6, 9)

# third_element = t[2]

# print(third_element)

#                         --------------------------------------------------------------------

# Q272. Slice t = (3, 6, 6, 9) from 1 to 3.


# t = (3, 6, 6, 9)

# slice_t = t[1:4]

# print(slice_t)

#                         --------------------------------------------------------------------

# Q273. Concatenate tuples t=(3, 6, 6, 9) and u=(4, 0, 8, 1).

# t=(3, 6, 6, 9) 
# u=(4, 0, 8, 1)

# concate = t + u

# print(concate)



#                         --------------------------------------------------------------------

# Q274. Unpack t = (3, 6, 6, 9) into a,b,c,d.

# t = (3, 6, 6, 9)

# a,b,c,d = t

# print(a,b,c,d)


#                         --------------------------------------------------------------------

# Q275. Count 0 in t = (3, 6, 6, 9).

# t = (3, 6, 6, 9)

# count_0 = t.count(0)

# print(count_0)

#                         --------------------------------------------------------------------

# Q276. Find index of first 3 in t = (3, 6, 6, 9).

# t = (3, 6, 6, 9)

# index_value = t.index(3)

# print(index_value)

#                         --------------------------------------------------------------------

# Q277. Convert list [1,2,3] to tuple.

# list = [1,2,3] 

# t = tuple(list)

# print(t)

#                       --------------------------------------------------------------------

# Q278. Check if 3 is in (1,2,3).

# t  = (1,2,3)

# check = 3 in t

# print(check)

#                         --------------------------------------------------------------------

# Q279. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)


#                         --------------------------------------------------------------------

# Q280. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# index_value = t[1][1]

# print(index_value)

#                         --------------------------------------------------------------------

# Q281. Access third element of t = (4, 0, 8, 1).


# t = (4, 0, 8, 1)

# print(t[2])

#                         --------------------------------------------------------------------

# Q282. Slice t = (4, 0, 8, 1) from 1 to 3.


# t = (4, 0, 8, 1)

# print(t[1:4])

#                         --------------------------------------------------------------------

# Q283. Concatenate tuples t=(4, 0, 8, 1) and u=(0, 1, 1, 4).

# t=(4, 0, 8, 1) 
# u=(0, 1, 1, 4)

# concate = t + u

# print(concate)


#                         --------------------------------------------------------------------

# Q284. Unpack t = (4, 0, 8, 1) into a,b,c,d.

# t = (4, 0, 8, 1)

# a,b,c,d = t

# print(a,b,c,d)


#                         --------------------------------------------------------------------

# Q285. Count 1 in t = (4, 0, 8, 1).

# t = (4, 0, 8, 1)

# count_1 = t.count(1)

# print(count_1)
#                         --------------------------------------------------------------------

# Q286. Find index of first 4 in t = (4, 0, 8, 1).

# t = (4, 0, 8, 1)

# index_value = t.index(4)

# print(index_value)


#                         --------------------------------------------------------------------

# Q287. Convert list [1,2,3] to tuple.

# list = [1,2,3]

# t = tuple(list)

# print(t)

#                         --------------------------------------------------------------------

# Q288. Check if 3 is in (1,2,3).

# t = (1,2,3)

# check = 3 in t

# print(check)


#                         --------------------------------------------------------------------

# Q289. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y  = y,x 

# print(x,y)


#                         --------------------------------------------------------------------

# Q290. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# print(t[1][1])


#                         --------------------------------------------------------------------

# Q291. Access third element of t = (0, 1, 1, 4).

# t = (0, 1, 1, 4)

# print(t[2])


#                         --------------------------------------------------------------------

# Q292. Slice t = (0, 1, 1, 4) from 1 to 3.

# t = (0, 1, 1, 4)

# slicing_t = t[1:4]

# print(slicing_t)


#                         --------------------------------------------------------------------

# Q293. Concatenate tuples t=(0, 1, 1, 4) and u=(1, 2, 3, 7).

# t=(0, 1, 1, 4) 
# u=(1, 2, 3, 7)

# concate = t + u

# print(concate)


#                         --------------------------------------------------------------------

# Q294. Unpack t = (0, 1, 1, 4) into a,b,c,d.

# t = (0, 1, 1, 4) 

# a,b,c,d = t

# print(a,b,c,d)


#                         --------------------------------------------------------------------

# Q295. Count 2 in t = (0, 1, 1, 4).

# t = (0, 1, 1, 4)

# count_2  = t.count(2)

# print(count_2)


#                         --------------------------------------------------------------------

# Q296. Find index of first 0 in t = (0, 1, 1, 4).

# t = (0, 1, 1, 4)

# index_value = t.index(0)

# print(index_value)

#                         --------------------------------------------------------------------

# Q297. Convert list [1,2,3] to tuple.

# list  = [1,2,3]

# t = tuple(list)

# print(t)

#                         --------------------------------------------------------------------

# Q298. Check if 3 is in (1,2,3).

# t = [1,2,3]

# check = 3 in t

# print(check)


#                         --------------------------------------------------------------------

# Q299. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)


#                         --------------------------------------------------------------------

# Q300. Nested access: get 3 from t=(1,(2,3),(4,5)).


# t=(1,(2,3),(4,5))

# print(t[1][1])


#                         --------------------------------------------------------------------

# Q301. Access third element of t = (1, 2, 3, 7).

# t = (1, 2, 3, 7)

# third_element = t[2]

# print(third_element)


#                         --------------------------------------------------------------------

# Q302. Slice t = (1, 2, 3, 7) from 1 to 3.

# t = (1, 2, 3, 7)

# slicing_t = t[1:4]

# print(slicing_t)

#                         --------------------------------------------------------------------

# Q303. Concatenate tuples t=(1, 2, 3, 7) and u=(2, 3, 5, 10).

# t=(1, 2, 3, 7) 
# u=(2, 3, 5, 10)

# concate = t + u
# print(concate)

#                         --------------------------------------------------------------------

# Q304. Unpack t = (1, 2, 3, 7) into a,b,c,d.

# t = (1, 2, 3, 7)

# a,b,c,d = t

# print(a,b,c,d)


#                         --------------------------------------------------------------------

# Q305. Count 0 in t = (1, 2, 3, 7).

# t = (1, 2, 3, 7)

# count_0 = t.count(0)

# print(count_0)

#                         --------------------------------------------------------------------

# Q306. Find index of first 1 in t = (1, 2, 3, 7).

# t = (1, 2, 3, 7)

# index_value = t.index(1)

# print(index_value)

#                         --------------------------------------------------------------------

# Q307. Convert list [1,2,3] to tuple.

# list = [1,2,3]

# t = tuple(list)

# print(t)


#                         --------------------------------------------------------------------

# Q308. Check if 3 is in (1,2,3).

# t = (1,2,3)

# check = 3 in t

# print(check)

#                         --------------------------------------------------------------------

# Q309. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)

#                         --------------------------------------------------------------------

# Q310. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# print(t[1][1])


#                         --------------------------------------------------------------------

# Q311. Access third element of t = (2, 3, 5, 10).


# t = (2, 3, 5, 10)

# third_element = t[2]

# print(third_element)


#                         --------------------------------------------------------------------

# Q312. Slice t = (2, 3, 5, 10) from 1 to 3.

# t = (2, 3, 5, 10)

# slicing_t = t[1:4]

# print(slicing_t)


#                         --------------------------------------------------------------------

# Q313. Concatenate tuples t=(2, 3, 5, 10) and u=(3, 4, 7, 2).

# t = (2, 3, 5, 10)

# u= (3, 4, 7, 2)

# concate = t + u 

# print(concate)


#                         --------------------------------------------------------------------

# Q314. Unpack t = (2, 3, 5, 10) into a,b,c,d.

# t = (2, 3, 5, 10)

# a,b,c,d = t

# print(a,b,c,d)



#                         --------------------------------------------------------------------

# Q315. Count 1 in t = (2, 3, 5, 10).

# t = (2, 3, 5, 10)

# count_1 = t.count(1)

# print(count_1)

# len_t = len(t)

# print(len_t)

#                         --------------------------------------------------------------------

# Q316. Find index of first 2 in t = (2, 3, 5, 10).

# t = (2, 3, 5, 10)
     
# index_value = t.index(2)

# print(index_value)

#                         --------------------------------------------------------------------

# Q317. Convert list [1,2,3] to tuple.

# list = [1,2,3]

# t = tuple(list)

# print(t)

#                         --------------------------------------------------------------------

# Q318. Check if 3 is in (1,2,3).

# t = (1,2,3)

# check = 3 in t

# print(check)

#                         --------------------------------------------------------------------

# Q319. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)


#                         --------------------------------------------------------------------

# Q320. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# get_3 = t[1][1]

# print(get_3)


#                         --------------------------------------------------------------------

# Q321. Access third element of t = (3, 4, 7, 2).

# t = (3, 4, 7, 2)

# print(t[2])


#                         --------------------------------------------------------------------

# Q322. Slice t = (3, 4, 7, 2) from 1 to 3.

# t = (3, 4, 7, 2)

# slice_t = t[1:4]

# print(slice_t)

#                         --------------------------------------------------------------------

# Q323. Concatenate tuples t=(3, 4, 7, 2) and u=(4, 5, 0, 5).

# t=(3, 4, 7, 2) 
# u=(4, 5, 0, 5)

# concate = t + u

# print(concate)


#                         --------------------------------------------------------------------

# Q324. Unpack t = (3, 4, 7, 2) into a,b,c,d.

# t = (3, 4, 7, 2)

# a,b,c,d = t

# print(a,b,c,d)


#                         --------------------------------------------------------------------

# Q325. Count 2 in t = (3, 4, 7, 2).

# t = (3, 4, 7, 2)

# count_t = t.count(2)

# print(count_t)

#                         --------------------------------------------------------------------

# Q326. Find index of first 3 in t = (3, 4, 7, 2).

# t = (3, 4, 7, 2)

# index_value = t.index(3)

# print(index_value)

#                         --------------------------------------------------------------------

# # Q327. Convert list [1,2,3] to tuple.

# list = [1,2,3]

# t = tuple(list)

# print(t)


#                         --------------------------------------------------------------------

# Q328. Check if 3 is in (1,2,3).

# t = (1,2,3)

# check = 3 in t

# print(check)


#                         --------------------------------------------------------------------

# Q329. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)


#                         --------------------------------------------------------------------

# Q330. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# get_3 = t[1][1]

# print(get_3)


#                         --------------------------------------------------------------------

# Q331. Access third element of t = (4, 5, 0, 5).

# t = (4, 5, 0, 5)

# print(t[2])



#                         --------------------------------------------------------------------

# Q332. Slice t = (4, 5, 0, 5) from 1 to 3.

# t = (4, 5, 0, 5)

# print(t[1:4])


#                         --------------------------------------------------------------------

# Q333. Concatenate tuples t=(4, 5, 0, 5) and u=(0, 6, 2, 8).

# t=(4, 5, 0, 5) 
# u=(0, 6, 2, 8)

# concate = t + u 

# print(concate)


#                         --------------------------------------------------------------------

# Q334. Unpack t = (4, 5, 0, 5) into a,b,c,d.

# t = (4, 5, 0, 5) 

# a,b,c,d = t

# print(a,b,c,d)


#                         --------------------------------------------------------------------

# Q335. Count 0 in t = (4, 5, 0, 5).

# t = (4, 5, 0, 5)

# count_0 = t.count(t)

# print(count_0)


#                         --------------------------------------------------------------------

# Q336. Find index of first 4 in t = (4, 5, 0, 5).

# t = (4, 5, 0, 5)

# index_value = t.index(4)

# print(index_value)

#                         --------------------------------------------------------------------

# Q337. Convert list [1,2,3] to tuple.

# list = [1,2,3]

# t = tuple(list)

# print(t)


#                         --------------------------------------------------------------------

# Q338. Check if 3 is in (1,2,3).

# t = (1,2,3)

# check = 3 in t

# print(check)

#                         --------------------------------------------------------------------

# Q339. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)

#                         --------------------------------------------------------------------

# Q340. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# print(t[1][1])

#                         --------------------------------------------------------------------

# Q341. Access third element of t = (0, 6, 2, 8).

# t = (0, 6, 2, 8)

# print(t[2])


#                         --------------------------------------------------------------------

# Q342. Slice t = (0, 6, 2, 8) from 1 to 3.

# t = (0, 6, 2, 8) 

# slicing_t = t[1:4]

# print(slicing_t)


#                         --------------------------------------------------------------------

# Q343. Concatenate tuples t=(0, 6, 2, 8) and u=(1, 0, 4, 0).

# t=(0, 6, 2, 8) 
# u=(1, 0, 4, 0)

# concate = t + u

# print(concate)


#                         --------------------------------------------------------------------

# Q344. Unpack t = (0, 6, 2, 8) into a,b,c,d.

# t = (0, 6, 2, 8) 

# a,b,c,d = t

# print(a,b,c,d)

#                         --------------------------------------------------------------------

# Q345. Count 1 in t = (0, 6, 2, 8).

# t = (0, 6, 2, 8)
     
# count_1 = t.count(1)

# print(count_1)

#                         --------------------------------------------------------------------

# Q346. Find index of first 0 in t = (0, 6, 2, 8).

# t = (0, 6, 2, 8)

# index_value = t.index(0)

# print(index_value)



#                         --------------------------------------------------------------------

# Q347. Convert list [1,2,3] to tuple.

# list = [1,2,3]

# t = tuple(list)

# print(t)

#                         --------------------------------------------------------------------

# Q348. Check if 3 is in (1,2,3).

# t = (1,2,3)

# check = 3 in t

# print(check)

#                         --------------------------------------------------------------------

# Q349. Swap values of x=5 and y=7 using tuple unpacking.

# x=5 
# y=7

# x,y = y,x

# print(x,y)

#                         --------------------------------------------------------------------

# Q350. Nested access: get 3 from t=(1,(2,3),(4,5)).

# t=(1,(2,3),(4,5))

# print(t[1][1])


#                         --------------------------------------------------------------------

